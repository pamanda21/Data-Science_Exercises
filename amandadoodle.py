# -*- coding: utf-8 -*-
"""Amandadoodle.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/13xM5yh5ty2xqx1lI9135LTVKXqnj4RpB

# Amanda Liu Python Doodle
"""

import numpy as np
from matplotlib import pyplot as plt

#this is a test
print ("Hello Amanda")
answer = 22*23
print (answer)

aNumber = 42
aNumber += 10
print (aNumber)

for i in range(10):
  print (i)

for item in ["bla", "buu"]:
  print (item)

count = 0
sentence = "ich bin ne fette kuh"
while count < 5:
   print(count)
   count += 1
else:
    print (sentence)

class MyClass(object):
  x=1
  foo = "initial"
  
  def __init__(self, par):
    self.foo = par

  def a_method(self): # always use self, other args...
    self.x += 41
    print(self.x, "|", self.foo)

m = MyClass("changing")
m.a_method()

"""# 101 NumPy Exercises"""

import numpy as np

#1
print (np.__version__)

#2
abc = np.arange(10)
print (abc)

#3
de = np.full((3,3), True, dtype=bool)
print (de)

#4
arr = np.array([0,1 ,2, 3, 4, 5, 6, 7, 8, 9])
fg = arr[arr % 2 == 1]
print (fg)

#5
arr[arr % 2 == 1] = -1
arr

#6
arr = np.arange(10)
hi = np.where(arr % 2 == 1 ,-1, arr)
print (arr)
hi

#7
jk = np.arange (10)
jk.reshape(2,5)

#8
a = np.arange(10).reshape(2,-1)
b = np.repeat(1, 10).reshape(2, -1)

np.vstack([a, b])
#9
np.hstack([a, b])

#10
c = np.array([1,2,3])
np.r_[np.repeat(c, 3), np.tile(c, 3)]

#11
d = np.array([1,2,3,2,3,4,3,4,5,6])
e = np.array([7,2,10,2,7,4,9,4,9,8])
np.intersect1d(d,e)

#12
f = np.array([1,2,3,4,5])
g = np.array([5,6,7,8,9])
np.setdiff1d(f,g)

#13 
h = np.array([1,2,3,2,3,4,3,4,5,6])
i = np.array([7,2,10,2,7,4,9,4,9,8])
np.where(h==i)

#14
j = np.array([2, 6, 1, 9, 10, 3, 27])
index = np.where((j >=5) & (j <= 10))
j[index]

#15
def maxx(x, y):
    """Get the maximum of two items"""
    if x >= y:
        return x
    else:
        return y
maxx(1, 5)

pair_max = np.vectorize(maxx, otypes=[float])
k = np.array([5, 7, 9, 8, 6, 4, 5])
l = np.array([6, 3, 4, 8, 9, 7, 1])
pair_max(k, l)

#16
arr = np.arange(9).reshape(3,3)
arr
arr[:, [1,0,2]]

#17
arr[[1,0,2], :]

#18
arr[::-1]

#19
arr[:, ::-1]

#20
lm = np.random.uniform(5,10, size=(5,3))
print (lm)

#21
rand_arr = np.random.random((5,3))
np.set_printoptions(precision=3)
rand_arr[:4]

#22
np.random.seed(100)
rand_arr = np.random.random([3,3])/1e3
rand_arr
np.set_printoptions(suppress=True, precision=6)  # precision is optional
rand_arr

#23
o = np.arange(15)
np.set_printoptions(threshold=6)
o = np.arange(15)
print (o)

#24
np.set_printoptions(threshold=np.inf, linewidth=np.nan)
o

#25
url = "https://archive.ics.uci.edu/ml/machine-learning-databases/iris/iris.data"
iris = np.genfromtxt(url, delimiter= ',', dtype = 'object')
names = ('sepallength', 'sepalwidth', 'petallength', 'petalwidth', 'species')

iris[:3]